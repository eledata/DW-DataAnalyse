-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-- Project Name : APAFC
-- Version : 1.0
-- Description:
-- Table Init
-- Revision History:
--    Date        Developer         Description
--    ---------   ---------------   ----------------------------------------------------
--    2014-3-17   Moyue           	Dig Inv.
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------

--Dig Inv for non-stock item(have free-stock), item value > 10K.
--Want to check demand from AP and global open sto, not ship yet.
--See the oppotini...

--Daily Update
DROP TABLE INV_SAP_PP_PO_HISTORY_ALL;
CREATE TABLE INV_SAP_PP_PO_HISTORY_ALL AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DW_DBLINK;

Job Name: Job_Daily_INV_PO_ALL
Job Time: 11:00 AM
Job Repeat Frequency: Daily, 5 days per week
Job running time: 90mins
  
Job Procedure:		
DECLARE
  TRUNCATE_TABLE_PO_ALL   VARCHAR2(1000);
  INSERT_TABLE_PO_ALL VARCHAR2(1000);
  DROP_TABLE_INV_REDP   VARCHAR2(1000);
  CREATE_TABLE_INV_REDP VARCHAR2(1000);
BEGIN
  TRUNCATE_TABLE_PO_ALL   := 'TRUNCATE TABLE INV_SAP_PP_PO_HISTORY_ALL';
  INSERT_TABLE_PO_ALL     := 'INSERT INTO INV_SAP_PP_PO_HISTORY_ALL 
  SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DW_DBLINK';
  EXECUTE IMMEDIATE TRUNCATE_TABLE_PO_ALL;
  EXECUTE IMMEDIATE INSERT_TABLE_PO_ALL;
  COMMIT;
  
  DROP_TABLE_INV_REDP := 'DROP TABLE APAFC_INV_REDEPLOY';
  CREATE_TABLE_INV_REDP := 'CREATE TABLE APAFC_INV_REDEPLOY AS SELECT * FROM VIEW_APAFC_INV_REDEPLOY';
  EXECUTE IMMEDIATE DROP_TABLE_INV_REDP;
  EXECUTE IMMEDIATE CREATE_TABLE_INV_REDP;
  COMMIT;
END;

---INV DATA - OPEN SO DATA
DROP VIEW VIEW_INV_SAP_FRTU_STOCK;
CREATE VIEW VIEW_INV_SAP_FRTU_STOCK AS
SELECT
OHSOSTOSTISTD.ID AS ID,
OHSOSTOSTISTD.MATERIAL AS MATERIAL,
OHSOSTOSTISTD.PLANT AS PLANT,
OHSOSTOSTISTD.STRATEGY_GRP AS STRATEGY_GRP,
OHSOSTOSTISTD.UNIT_COST AS UNIT_COST,
OHSOSTOSTISTD.CATALOG_DASH AS CATALOG_DASH,
OHSOSTOSTISTD.OH_QTY AS OH_QTY,
OHSOSTOSTISTD.SUM_OPEN_SO AS SUM_OPEN_SO,
OHSOSTOSTISTD.SUM_PO_QTY_SPL AS SUM_PO_QTY_SPL,
OHSOSTOSTISTD.SIT_QTY AS SIT_QTY,
OHSOSTOSTISTD.SUM_OPEN_SC AS SUM_OPEN_SC,
STO_DEMD_OPEN_QTY.SUM_PO_QTY_DEMD AS SUM_PO_QTY_DEMD,
(NVL(OHSOSTOSTISTD.OH_QTY,0)-NVL(OHSOSTOSTISTD.SUM_OPEN_SO,0)-NVL(OHSOSTOSTISTD.SUM_OPEN_SC,0) -NVL(STO_DEMD_OPEN_QTY.SUM_PO_QTY_DEMD,0)) AS FREE_STK,
OHSOSTOSTISTD.UNIT_COST*(NVL(OHSOSTOSTISTD.OH_QTY,0)-NVL(OHSOSTOSTISTD.SUM_OPEN_SO,0)-NVL(OHSOSTOSTISTD.SUM_OPEN_SC,0) -NVL(STO_DEMD_OPEN_QTY.SUM_PO_QTY_DEMD,0)) AS FREE_STK_VAL
FROM
(
SELECT 
OHSOSTOSTI.ID AS ID,
OHSOSTOSTI.MATERIAL AS MATERIAL,
OHSOSTOSTI.PLANT AS PLANT,
OHSOSTOSTI.STRATEGY_GRP AS STRATEGY_GRP,
OHSOSTOSTI.UNIT_COST AS UNIT_COST,
OHSOSTOSTI.CATALOG_DASH AS CATALOG_DASH,
OHSOSTOSTI.OH_QTY AS OH_QTY,
OHSOSTOSTI.SUM_OPEN_SO AS SUM_OPEN_SO,
OHSOSTOSTI.SUM_PO_QTY_SPL AS SUM_PO_QTY_SPL,
OHSOSTOSTI.SIT_QTY AS SIT_QTY,
OPEN_SUM_SCT.SUM_OPEN_SC AS SUM_OPEN_SC
FROM
(
SELECT 
OHSOSTO.ID AS ID,
OHSOSTO.MATERIAL AS MATERIAL,
OHSOSTO.PLANT AS PLANT,
OHSOSTO.STRATEGY_GRP AS STRATEGY_GRP,
OHSOSTO.UNIT_COST AS UNIT_COST,
OHSOSTO.CATALOG_DASH AS CATALOG_DASH,
OHSOSTO.OH_QTY AS OH_QTY,
OHSOSTO.SUM_OPEN_SO AS SUM_OPEN_SO,
OHSOSTO.SUM_PO_QTY_SPL AS SUM_PO_QTY_SPL,
STOCK_IN_TRAINST.STOCK_IN_TRANSIT_QTY AS SIT_QTY
FROM
(
SELECT 
OH_PP_SOQ.ID AS ID,
OH_PP_SOQ.MATERIAL AS MATERIAL,
OH_PP_SOQ.PLANT AS PLANT,
OH_PP_SOQ.STRATEGY_GRP AS STRATEGY_GRP,
OH_PP_SOQ.UNIT_COST AS UNIT_COST,
OH_PP_SOQ.CATALOG_DASH AS CATALOG_DASH,
OH_PP_SOQ.OH_QTY,
OH_PP_SOQ.SUM_OPEN_SO,
STO_SPLY_OPEN_QTY.SUM_PO_QTY_SPL
FROM
(
SELECT
OH_PP.ID AS ID,
OH_PP.MATERIAL AS MATERIAL,
OH_PP.PLANT AS PLANT,
OH_PP.STRATEGY_GRP AS STRATEGY_GRP,
OH_PP.UNIT_COST AS UNIT_COST,
OH_PP.CATALOG_DASH AS CATALOG_DASH,
OH_PP.OH_QTY AS OH_QTY,
OPEN_SUM_SO.SUM_OPEN_SO AS SUM_OPEN_SO
FROM
(
SELECT 
OH_INV.ID AS ID,
OH_INV.MATERIALID AS MATERIAL,
OH_INV.PLANTID AS PLANT,
PP_ITEM.STRATEGY_GRP AS STRATEGY_GRP,
PP_ITEM.UNIT_COST AS UNIT_COST,
PP_ITEM.CATALOG_DASH AS CATALOG_DASH,
OH_INV.OH_QTY AS OH_QTY
FROM
(SELECT MATERIALID||'_'||PLANTID AS ID,MATERIALID,PLANTID, OH_QTY FROM INV_SAP_INVENTORY_BY_PLANT)OH_INV
LEFT JOIN
(SELECT ID,STRATEGY_GRP,CATALOG_DASH,UNIT_COST FROM INV_SAP_PP_OPT_X )PP_ITEM
ON PP_ITEM.ID = OH_INV.ID
)OH_PP
LEFT JOIN
(
SELECT
ID,
SUM(OPEN_QTY) AS SUM_OPEN_SO
FROM
(
SELECT
OPEN_SO_QTY.ID AS ID,
PP_ITEM_SO.LEAD_TIME AS LEAD_TIME,
OPEN_SO_QTY.OPEN_QTY AS OPEN_QTY,
OPEN_SO_QTY.MAX_REQUEST_DATE AS MAX_REQUEST_DATE
FROM
(
(SELECT MATERIAL||'_'||PLANT AS ID,OPEN_QTY,MAX_REQUEST_DATE FROM INV_SAP_SALES_VBAK_VBAP_VBUP)OPEN_SO_QTY
LEFT JOIN
(SELECT ID, LEAD_TIME FROM INV_SAP_PP_OPT_X)PP_ITEM_SO
ON PP_ITEM_SO.ID = OPEN_SO_QTY.ID
)
WHERE MAX_REQUEST_DATE < SYSDATE + LEAD_TIME + 30
)
GROUP BY 
ID
)OPEN_SUM_SO
ON OPEN_SUM_SO.ID = OH_PP.ID
)OH_PP_SOQ
LEFT JOIN
(
SELECT
MATERIALID||'_'||
PLANTID AS ID,
SUM(PO_QTY) AS SUM_PO_QTY_SPL
FROM
(
SELECT
PLANTID,
GREATEST ( MENGESCHEDULEDQTY_BASE_UOM - ( NVL ( MENGESCHEDULEDQTY_BASE_UOM / MENGESCHEDULEDQTY, 0) * NVL ( GREATEST (WEMNGRECEIVEDQTY, WAMNGISSUEDQTY), 0)), 0) AS PO_QTY,
 MATERIALID,
  TO_NUMBER (
  CASE
    WHEN LIFNR_VENDORNO LIKE 'V%'
    AND LENGTH (LIFNR_VENDORNO) = 5
    THEN SUBSTR (LIFNR_VENDORNO, 2, 4)
    WHEN LENGTH (LIFNR_VENDORNO) > 5
    THEN '0'
    ELSE TO_CHAR (LIFNR_VENDORNO)
  END) SHIPPING_PLANT
  FROM INV_SAP_PP_PO_HISTORY WHERE
   PO_SO_SA_FLAG                                                    IN ('STO')
AND ( DELIVERYCOMPLETE NOT LIKE 'X%'
OR DELIVERYCOMPLETE   IS NULL)
AND MENGESCHEDULEDQTY <> 0
AND LAST_SHIP_DATE    IS NULL
)
GROUP BY 
MATERIALID,
PLANTID
)STO_SPLY_OPEN_QTY
ON STO_SPLY_OPEN_QTY.ID = OH_PP_SOQ.ID
)OHSOSTO
LEFT JOIN
(
  SELECT MATERIALID
    ||'_'
    ||PLANTID AS ID,
    MATERIALID,
    PLANTID,
    SUM(DELIVERY_QTY_SUOM) AS STOCK_IN_TRANSIT_QTY
  FROM INV_SAP_LIKP_LIPS_DAILY
  WHERE REFERENCE_DOC_TRIM IN
    (SELECT EBELNPURCHDOCNO
    FROM INV_SAP_PP_PO_HISTORY
    WHERE DELIVERYCOMPLETE IS NULL
    )
  AND CHANGED_ON_DATE IS NULL --THIS DATA IS IMPORTANT. IT SHOW THE REAL QTY IN TRANSIT.
  GROUP BY MATERIALID,
    MATERIALID,
    PLANTID
)STOCK_IN_TRAINST
ON STOCK_IN_TRAINST.ID = OHSOSTO.ID
)OHSOSTOSTI
LEFT JOIN
(
----SHOPPING CART
SELECT ID,
  SUM(SC_OPEN_QTY) AS SUM_OPEN_SC
FROM
  (
  SELECT OPEN_SC_QTY.ID                   AS ID,
    PP_ITEM_SO.LEAD_TIME                   AS LEAD_TIME,
    OPEN_SC_QTY.SC_OPEN_QTY                AS SC_OPEN_QTY,
    OPEN_SC_QTY.BEDATSCHEDULELINEORDERDATE AS BEDATSCHEDULELINEORDERDATE
  FROM 
  (
    SELECT
    ID,
    BEDATSCHEDULELINEORDERDATE,
    (MENGESCHEDULEDQTY-WAMNGISSUEDQTY) AS SC_OPEN_QTY
    FROM
    (
    SELECT 
    ID,
    STO_CCS_ID,
    MENGESCHEDULEDQTY,
    WAMNGISSUEDQTY,
    BEDATSCHEDULELINEORDERDATE,
    EBELNPURCHDOCNO,
    ETENRPURCHDELIVSCHLINESA
    FROM
    (
    SELECT 
    PO_HST_ORG.ID AS ID,
    PO_HST_ORG.STO_CCS_ID AS STO_CCS_ID,
    PO_HST_ORG.MENGESCHEDULEDQTY AS MENGESCHEDULEDQTY,
    PO_HST_ORG.WAMNGISSUEDQTY AS WAMNGISSUEDQTY,
    PO_HST_ORG.BEDATSCHEDULELINEORDERDATE AS BEDATSCHEDULELINEORDERDATE,
    PO_HST_ORG.EBELNPURCHDOCNO AS EBELNPURCHDOCNO,
    PO_HST_ORG.ETENRPURCHDELIVSCHLINESA AS ETENRPURCHDELIVSCHLINESA,
    PO_HST_ORG_NOT.STO_CCS_ID AS STO_CCS_ID_CHK
    FROM
    (
    SELECT 
      MATERIALID
      ||'_'
      ||PLANTID                          AS ID,
      EBELNPURCHDOCNO||'_'||EBELPPURCHITEMNO AS STO_CCS_ID,
      MENGESCHEDULEDQTY,
      WAMNGISSUEDQTY,
      BEDATSCHEDULELINEORDERDATE,
      EBELNPURCHDOCNO,
      ETENRPURCHDELIVSCHLINESA
      FROM
      INV_SAP_PP_PO_HISTORY
    )PO_HST_ORG
    LEFT JOIN
    (SELECT EBELNPURCHDOCNO||'_'||EBELPPURCHITEMNO AS STO_CCS_ID
    FROM INV_SAP_PP_PO_HISTORY
    WHERE PO_SO_SA_FLAG          = 'SHOP CART'
    AND COMMIT_CONFIRM_SUM      IS NOT NULL
    )PO_HST_ORG_NOT
    ON PO_HST_ORG_NOT.STO_CCS_ID = PO_HST_ORG.STO_CCS_ID    
    )WHERE ETENRPURCHDELIVSCHLINESA = '1' AND STO_CCS_ID_CHK IS NOT NULL
    )
    )OPEN_SC_QTY
  LEFT JOIN
    (SELECT ID, LEAD_TIME FROM INV_SAP_PP_OPT_X
    )PP_ITEM_SO
  ON PP_ITEM_SO.ID                 = OPEN_SC_QTY.ID )
  WHERE BEDATSCHEDULELINEORDERDATE < SYSDATE + LEAD_TIME + 30
GROUP BY ID
)OPEN_SUM_SCT
ON OPEN_SUM_SCT.ID = OHSOSTOSTI.ID
)OHSOSTOSTISTD
LEFT JOIN
(
SELECT
ID,
SUM(PO_QTY) AS SUM_PO_QTY_DEMD
FROM
(
SELECT 
MATERIALID||'_'||SHIPPING_PLANT AS ID,
COMMITTED_DATE_MAX,
LEAD_TIME,
PO_QTY
FROM
(
SELECT
STO_DEMD_OPEN.LID AS LID,
STO_DEMD_OPEN.MATERIALID AS MATERIALID,
STO_DEMD_OPEN.PLANTID AS PLANTID,
STO_DEMD_OPEN.SHIPPING_PLANT AS SHIPPING_PLANT,
STO_DEMD_OPEN.PO_QTY AS PO_QTY,
STO_DEMD_OPEN.COMMITTED_DATE_MAX AS COMMITTED_DATE_MAX,
PP_ITEM.LEAD_TIME AS LEAD_TIME
FROM
(
SELECT 
MATERIALID||'_'||PLANTID AS LID,
MATERIALID,
PLANTID,
PO_QTY,
MAX(COMMITTED_DATE) AS COMMITTED_DATE_MAX,
SHIPPING_PLANT
FROM
(
SELECT
PLANTID,
GREATEST ( MENGESCHEDULEDQTY_BASE_UOM - ( NVL ( MENGESCHEDULEDQTY_BASE_UOM / MENGESCHEDULEDQTY, 0) * NVL ( GREATEST (WEMNGRECEIVEDQTY, WAMNGISSUEDQTY), 0)), 0) AS PO_QTY,
 MATERIALID,
 COMMITTED_DATE,
  TO_NUMBER (
  CASE
    WHEN LIFNR_VENDORNO LIKE 'V%'
    AND LENGTH (LIFNR_VENDORNO) = 5
    THEN SUBSTR (LIFNR_VENDORNO, 2, 4)
    WHEN LENGTH (LIFNR_VENDORNO) > 5
    THEN '0'
    ELSE TO_CHAR (LIFNR_VENDORNO)
  END) SHIPPING_PLANT
  FROM INV_SAP_PP_PO_HISTORY_ALL WHERE
   PO_SO_SA_FLAG                                                IN ('STO')
AND ( DELIVERYCOMPLETE NOT LIKE 'X%'
OR DELIVERYCOMPLETE   IS NULL)
AND MENGESCHEDULEDQTY <> 0
AND LAST_SHIP_DATE    IS NULL
)
GROUP BY
MATERIALID,
PLANTID,
PO_QTY,
SHIPPING_PLANT
)STO_DEMD_OPEN
LEFT JOIN
(SELECT ID, LEAD_TIME FROM INV_SAP_PP_OPT_X)PP_ITEM
ON PP_ITEM.ID = STO_DEMD_OPEN.LID
)
WHERE COMMITTED_DATE_MAX < SYSDATE + LEAD_TIME + 30
)
GROUP BY 
ID
)STO_DEMD_OPEN_QTY
ON STO_DEMD_OPEN_QTY.ID = OHSOSTOSTISTD.ID;

--Inv Redeploy Report
DROP VIEW VIEW_APAFC_INV_REDEPLOY;
CREATE VIEW VIEW_APAFC_INV_REDEPLOY AS
SELECT 
STO_NOT_SHIPP_MATL.ID AS ID,
STO_NOT_SHIPP_MATL.MATERIAL AS MATERIAL,
STO_NOT_SHIPP_MATL.CATALOG_DASH AS CATALOG_DASH,
STO_NOT_SHIPP_MATL.PLANT AS PLANT,
STO_NOT_SHIPP_MATL.STRATEGY_GRP AS STRATEGY_GRP,
STO_NOT_SHIPP_MATL.FREE_STK AS FREE_STK,
STO_NOT_SHIPP_MATL.UNIT_COST AS UNIT_COST,
STO_NOT_SHIPP_MATL.FREE_STK_VAL AS FREE_STK_VAL,
STO_NOT_SHIPP_MATL.EBELNPURCHDOCNO AS EBELNPURCHDOCNO,
STO_NOT_SHIPP_MATL.BSART_PURCHDOCTYPE AS BSART_PURCHDOCTYPE,
STO_NOT_SHIPP_MATL.CUSTOMER_PLANT AS CUSTOMER_PLANT,
PP_ITEM_X.STRATEGY_GRP AS CUSTOMER_STRATEGY_GRP,
STO_NOT_SHIPP_MATL.SHIPPING_PLANT AS SHIPPING_PLANT,
STO_NOT_SHIPP_MATL.SHIP_STRATEGY_GRP AS SHIP_STRATEGY_GRP,
STO_NOT_SHIPP_MATL.PO_QTY AS PO_QTY,
STO_NOT_SHIPP_MATL.PO_VALUE AS PO_VALUE
FROM
(
SELECT
MATL_ASSET.ID AS ID,
MATL_ASSET.MATERIAL||'_'||STO_NOT_SHIPP.PLANTID AS SID,
MATL_ASSET.MATERIAL AS MATERIAL,
MATL_ASSET.CATALOG_DASH AS CATALOG_DASH,
MATL_ASSET.PLANT AS PLANT,
MATL_ASSET.STRATEGY_GRP AS STRATEGY_GRP,
MATL_ASSET.FREE_STK AS FREE_STK,
MATL_ASSET.UNIT_COST AS UNIT_COST,
MATL_ASSET.FREE_STK_VAL AS FREE_STK_VAL,
STO_NOT_SHIPP.EBELNPURCHDOCNO AS EBELNPURCHDOCNO,
STO_NOT_SHIPP.BSART_PURCHDOCTYPE AS BSART_PURCHDOCTYPE,
STO_NOT_SHIPP.PLANTID AS CUSTOMER_PLANT,
STO_NOT_SHIPP.SHIPPING_PLANT AS SHIPPING_PLANT,
STO_NOT_SHIPP.SHIP_STRATEGY_GRP AS SHIP_STRATEGY_GRP,
STO_NOT_SHIPP.PO_QTY AS PO_QTY,
NVL(STO_NOT_SHIPP.PO_QTY*MATL_ASSET.UNIT_COST,0) AS PO_VALUE
FROM
(
SELECT ID,
MATERIAL,
PLANT,
STRATEGY_GRP,
CATALOG_DASH,
UNIT_COST,
FREE_STK,
FREE_STK_VAL
FROM VIEW_INV_SAP_FRTU_STOCK WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140')
)MATL_ASSET
LEFT JOIN
(
SELECT 
STO_NOT_SHIP.ID AS ID,
STO_NOT_SHIP.PLANTID AS PLANTID,
STO_NOT_SHIP.MATERIALID AS MATERIALID,
STO_NOT_SHIP.BSART_PURCHDOCTYPE AS BSART_PURCHDOCTYPE,
STO_NOT_SHIP.PO_QTY AS PO_QTY,
STO_NOT_SHIP.SHIPPING_PLANT AS SHIPPING_PLANT,
STO_NOT_SHIP.EBELNPURCHDOCNO AS EBELNPURCHDOCNO,
PP_ITEM.STRATEGY_GRP AS SHIP_STRATEGY_GRP
FROM
(
SELECT 
MATERIALID||'_'||SHIPPING_PLANT AS ID,
SHIPPING_PLANT,
BSART_PURCHDOCTYPE,
MATERIALID,
PLANTID,
PO_QTY,
EBELNPURCHDOCNO
FROM
(
SELECT
MATERIALID||'_'||PLANTID AS ID,
BSART_PURCHDOCTYPE,
PLANTID,
GREATEST ( MENGESCHEDULEDQTY_BASE_UOM - ( NVL ( MENGESCHEDULEDQTY_BASE_UOM / MENGESCHEDULEDQTY, 0) * NVL ( GREATEST (WEMNGRECEIVEDQTY, WAMNGISSUEDQTY), 0)), 0) AS PO_QTY,
 MATERIALID,
  TO_NUMBER (
  CASE
    WHEN LIFNR_VENDORNO LIKE 'V%'
    AND LENGTH (LIFNR_VENDORNO) = 5
    THEN SUBSTR (LIFNR_VENDORNO, 2, 4)
    WHEN LENGTH (LIFNR_VENDORNO) > 5
    THEN '0'
    ELSE TO_CHAR (LIFNR_VENDORNO)
  END) SHIPPING_PLANT,
  EBELNPURCHDOCNO
  FROM INV_SAP_PP_PO_HISTORY_ALL WHERE
   PO_SO_SA_FLAG                                                    IN ('STO')
AND ( DELIVERYCOMPLETE NOT LIKE 'X%'
OR DELIVERYCOMPLETE   IS NULL)
AND MENGESCHEDULEDQTY <> 0
AND LAST_SHIP_DATE    IS NULL
)
)STO_NOT_SHIP
LEFT JOIN
(SELECT ID,STRATEGY_GRP FROM INV_SAP_PP_OPT_X)PP_ITEM
ON PP_ITEM.ID = STO_NOT_SHIP.ID
)STO_NOT_SHIPP
ON STO_NOT_SHIPP.MATERIALID = MATL_ASSET.MATERIAL AND STO_NOT_SHIPP.PLANTID <> MATL_ASSET.PLANT
)STO_NOT_SHIPP_MATL
LEFT JOIN
(SELECT ID,STRATEGY_GRP FROM INV_SAP_PP_OPT_X)PP_ITEM_X 
ON PP_ITEM_X.ID = STO_NOT_SHIPP_MATL.SID;

DROP TABLE APAFC_INV_REDEPLOY;
CREATE TABLE APAFC_INV_REDEPLOY AS SELECT * FROM VIEW_APAFC_INV_REDEPLOY;


--Report
SELECT
INV_REDP.TOT_ID,
INV_REDP.MATERIAL,
INV_REDP.CATALOG_DASH,
INV_REDP.PLANT,
INV_REDP.STRATEGY_GRP,
INV_REDP.FREE_STK,
INV_REDP.UNIT_COST,
INV_REDP.FREE_STK_VAL,
INV_REDP.EBELNPURCHDOCNO,
INV_REDP.BSART_PURCHDOCTYPE,
INV_REDP.CUSTOMER_PLANT,
INV_REDP.CUSTOMER_STRATEGY_GRP,
INV_REDP.SHIPPING_PLANT,
INV_REDP.SHIP_STRATEGY_GRP,
INV_REDP.PO_QTY,
INV_REDP.PO_VALUE,
CMMTS.COMMENTS,
CMMTS.PLANNER,
CMMTS.LAST_UPDATE_DATE
FROM
(SELECT ID||'_'||EBELNPURCHDOCNO||'_'||CUSTOMER_PLANT AS TOT_ID,
MATERIAL,
CATALOG_DASH,
PLANT,
STRATEGY_GRP,
FREE_STK,
UNIT_COST,
FREE_STK_VAL,
EBELNPURCHDOCNO,
BSART_PURCHDOCTYPE,
CUSTOMER_PLANT,
CUSTOMER_STRATEGY_GRP,
SHIPPING_PLANT,
SHIP_STRATEGY_GRP,
PO_QTY,
PO_VALUE
FROM APAFC_INV_REDEPLOY
WHERE STRATEGY_GRP      = 'Z4'
AND BSART_PURCHDOCTYPE IN ('ZNB','ZST')
AND PLANT              <> CUSTOMER_PLANT 
AND PLANT              <> SHIPPING_PLANT 
AND FREE_STK_VAL        > 1000
AND CUSTOMER_STRATEGY_GRP NOT IN ('40','ZB')
AND SHIP_STRATEGY_GRP NOT IN ('40','ZB')
)INV_REDP
LEFT JOIN
(
SELECT ID,
COMMENTS,
PLANNER,
LAST_UPDATE_DATE
FROM INV_SAP_DIG_COMMENTS
)CMMTS
ON CMMTS.ID = INV_REDP.TOT_ID;

--Comments

CREATE TABLE INV_SAP_DIG_COMMENTS_TMP AS SELECT * FROM INV_SAP_SVD_COMMENTS_TMP;
CREATE TABLE INV_SAP_DIG_COMMENTS AS SELECT * FROM INV_SAP_SVD_COMMENTS;

TRUNCATE TABLE INV_SAP_DIG_COMMENTS;
TRUNCATE TABLE INV_SAP_DIG_COMMENTS_TMP;

SELECT * FROM INV_SAP_DIG_COMMENTS;
SELECT * FROM INV_SAP_DIG_COMMENTS_TMP;

--Upload to tmp	
INSERT
INTO INV_SAP_DIG_COMMENTS_TMP
  (
    ID,
    LAST_COMMENT_DATE,
    COMMENTS,
    PLANNER,
    LAST_UPDATE_DATE
  )
  VALUES
  (
    'ID_1',
    SYSDATE,
    'COMMENTS_1',
    'PLANNER_1',
    SYSDATE
  )
  
--Merge into standard	
MERGE INTO INV_SAP_DIG_COMMENTS SVD_COM USING
(SELECT ID,
  LAST_COMMENT_DATE,
  COMMENTS,
  PLANNER,
  LAST_UPDATE_DATE
FROM INV_SAP_DIG_COMMENTS_TMP
) TMP ON ( SVD_COM.ID=TMP.ID)
WHEN MATCHED THEN
  UPDATE
  SET SVD_COM.LAST_COMMENT_DATE = TMP.LAST_COMMENT_DATE,
    SVD_COM.COMMENTS            = TMP.COMMENTS,
    SVD_COM.PLANNER             = TMP.PLANNER,
    SVD_COM.LAST_UPDATE_DATE    = TMP.LAST_UPDATE_DATE WHEN NOT MATCHED THEN
  INSERT VALUES
    (
      TMP.ID,
      TMP.LAST_COMMENT_DATE,
      TMP.COMMENTS,
      TMP.PLANNER,
      TMP.LAST_UPDATE_DATE
    )
