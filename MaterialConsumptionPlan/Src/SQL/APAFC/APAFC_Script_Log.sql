create or replace PROCEDURE               AA_QDW_SCRIPT_LOG ( SCRIPT_RECORD_ID 		IN NUMBER
	   	  		  			 				   ,SCRIPT_GROUP 			IN VARCHAR2
                                               ,SCRIPT_INDENTIFIER 		IN VARCHAR2
                                               ,SCRIPT_INDENTIFIER_DESC IN VARCHAR2
											   ,BEGIN_DATE 				IN DATE
											   ,STATUS     				IN VARCHAR2
											   ,RECORD_COUNT            IN NUMBER
											   ,ORACLE_ERROR            IN VARCHAR2
											   ,INSERT_FLAG             IN BOOLEAN
												,PSCRIPT_PARAM1          IN VARCHAR2
												,PSCRIPT_PARAM2          IN VARCHAR2
												,PSCRIPT_PARAM3          IN VARCHAR2
												,PSCRIPT_PARAM4          IN VARCHAR2
											   ) IS
--	RECORD_UPDATED_DATE DATE;   -- THIS DATE TELLS WHEN THE CRITICAL INFORMATION CHANGES IN THE ORACLE_NCR_SYSTEM
BEGIN
	 IF INSERT_FLAG = TRUE THEN
	   BEGIN
	 	INSERT INTO AAA_QDW_SCRIPT_LOG (RECORD_ID
	                                        ,SCRIPT_GROUP
											,SCRIPT_ITEM
											,SCRIPT_ITEM_DESC
											,SCRIPT_ITEM_BEGIN_TMST
											,SCRIPT_ITEM_END_TMST
											,SCRIPT_ITEM_STATUS
											, RELATED_RECORD_COUNT
											,SCRIPT_ITEM_MSG
											,SCRIPT_PARAM1
											,SCRIPT_PARAM2
											,SCRIPT_PARAM3
											,SCRIPT_PARAM4 )
	                             VALUES(  SCRIPT_RECORD_ID
								         ,SUBSTR(SCRIPT_GROUP,1,80)
										 ,SUBSTR(SCRIPT_INDENTIFIER,1,80)
										 ,SUBSTR(SCRIPT_INDENTIFIER_DESC,1,200)
										 , BEGIN_DATE
										 , SYSDATE
										 , SUBSTR(STATUS,1,4)
										 , RECORD_COUNT
										 , SUBSTR(ORACLE_ERROR,1,4000)
										 ,PSCRIPT_PARAM1
										 ,PSCRIPT_PARAM2
										 ,PSCRIPT_PARAM3
										 ,PSCRIPT_PARAM4
										 );
      END;
	ELSE
      BEGIN
       UPDATE 	AAA_QDW_SCRIPT_LOG SET SCRIPT_ITEM_STATUS = STATUS
	   										 	,SCRIPT_ITEM_DESC = SCRIPT_INDENTIFIER_DESC
												,SCRIPT_ITEM_END_TMST = SYSDATE
												,SCRIPT_ITEM_MSG = SUBSTR(ORACLE_ERROR,1,4000)
 												,RELATED_RECORD_COUNT = RECORD_COUNT
												,SCRIPT_PARAM1 = NVL(PSCRIPT_PARAM1,SCRIPT_PARAM1)
												,SCRIPT_PARAM2 = NVL(PSCRIPT_PARAM2,SCRIPT_PARAM2)
												,SCRIPT_PARAM3 = NVL(PSCRIPT_PARAM3,SCRIPT_PARAM3)
												,SCRIPT_PARAM4 = NVL(PSCRIPT_PARAM4,SCRIPT_PARAM4)
	   WHERE RECORD_ID = SCRIPT_RECORD_ID ;
       END;
	END IF;
   COMMIT;

   EXCEPTION
       WHEN OTHERS THEN
	 	INSERT INTO AAA_QDW_SCRIPT_LOG (RECORD_ID
	                                        ,SCRIPT_GROUP
											,SCRIPT_ITEM
											,SCRIPT_ITEM_DESC
											,SCRIPT_ITEM_BEGIN_TMST
											,SCRIPT_ITEM_END_TMST
											,SCRIPT_ITEM_STATUS
											, RELATED_RECORD_COUNT
											,SCRIPT_ITEM_MSG
											 )
	                             VALUES(  SCRIPT_RECORD_ID
								         ,'ERROR IN THE SCRIPT_LOG'
										 ,NULL
										 ,NULL
										 , SYSDATE
										 , SYSDATE
										 , 'C'
										 , 0
										 , SUBSTR(SUBSTR(DBMS_UTILITY.FORMAT_ERROR_STACK,1,1000),1,4000)
										 );
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('ERROR IN AA_QDW_SCRIPT_LOG@RISOP STORED PROC '|| SCRIPT_INDENTIFIER );

END  AA_QDW_SCRIPT_LOG ;





  SOLDTO_INIT := 'CREATE TABLE APAFC_SCRIPT_LOGGING
    (
      LOG_ID       VARCHAR2(1000),
      SCRIPT_NAME     VARCHAR2(200),
      SCRIPT_STEP_NAME     VARCHAR2(200),
      SCRIPT_RUNNING_START_TIME  VARCHAR2(2000),
      SCRIPT_RUNNING_TIME VARCHAR2(200),
      SCRIPT_RUNNING_STATUS     VARCHAR2(200),
      SCRIPT_RUNNING_DETAILS     VARCHAR2(200)
    )';




CREATE OR REPLACE PROCEDURE APAFC_SCRIPT_LOGGING(
    LOG_ID                    IN VARCHAR2,
    SCRIPT_NAME               IN VARCHAR2,
    SCRIPT_STEP_NAME          IN VARCHAR2,
    SCRIPT_RUNNING_START_TIME IN VARCHAR2,
    SCRIPT_RUNNING_TIME       IN VARCHAR2,
    SCRIPT_RUNNING_STATUS     IN VARCHAR2,
    SCRIPT_RUNNING_DETAILS     IN VARCHAR2
  )
IS
INSERT_LOG VARCHAR2(1000);
PROCESS_TERMINATED EXCEPTION;
BEGIN
INSERT_LOG := 'INSERT INTO APAFC_SCRIPT_LOGGING (LOG_ID,
SCRIPT_NAME,
SCRIPT_STEP_NAME,
SCRIPT_RUNNING_START_TIME,
SCRIPT_RUNNING_TIME,
SCRIPT_RUNNING_STATUS,
SCRIPT_RUNNING_DETAILS) 
VALUES ( '''||LOG_ID||''','''||SCRIPT_NAME||''','''||SCRIPT_STEP_NAME||''','''||SCRIPT_RUNNING_START_TIME||''','''||SCRIPT_RUNNING_TIME||''','''||SCRIPT_RUNNING_STATUS||''','''||SCRIPT_RUNNING_DETAILS||''')';
APAFC_SCRIPT_EXE_IMMEDIATE(INSERT_LOG);
EXCEPTION
WHEN OTHERS THEN
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('Execute Script:'||SUBSTR(INSERT_LOG,1,100));
  DBMS_OUTPUT.PUT_LINE('Execute Error:');
  DBMS_OUTPUT.PUT_LINE(SUBSTR(DBMS_UTILITY.FORMAT_ERROR_STACK,1,200)||SUBSTR(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,1,200));
  RAISE PROCESS_TERMINATED;
END APAFC_SCRIPT_LOGGING;


begin
APAFC_SCRIPT_LOGGING('12','12','12','12','12','12','12');
end;
DROP TABLE APAFC_SCRIPT_LOGGING;
SELECT * FROM APAFC_SCRIPT_LOGGING;


INSERT INTO APAFC_SCRIPT_LOGGING  
VALUES ( '12','12','12','12','12','12','12');

